buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

}

group = 'capstonServer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {

	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'ai.djl:djl-zero:0.21.0'
	implementation 'ai.djl.spring:djl-spring-boot-starter-mxnet-auto:0.20'
	implementation 'ai.djl.spring:djl-spring-boot-starter-pytorch-auto:0.20'

	//AppProperties
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	//Mysql
	implementation 'mysql:mysql-connector-java'

	//Jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'


	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.google.code.gson:gson:2.10.1'

	//Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// OpenAPI 서드파티 라이브러리 ( 2023.04.15 기준 0.12.0이 최신버전 )
	implementation 'com.theokanning.openai-gpt3-java:service:0.12.0'

	// querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'


	//aws
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.415'


	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	implementation 'org.json:json:20210307'

	//swaggerUI
	implementation 'io.springfox:springfox-boot-starter:3.0.0'



	testImplementation 'junit:junit:4.13.2'

}
tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/'querydsl'"
// JPA 사용여부 및 사용 경로 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가 설정
sourceSets {
	main.java.srcDir querydslDir
}


// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

